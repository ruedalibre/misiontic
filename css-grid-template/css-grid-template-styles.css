/* Esta configuración de margin y padding 
inicial quita los valores por defecto que 
traen los elementos; así es más fácil 
establecer estas medidas de manera manual 
para tener más control el diseño */
* {
    margin: 0;
    padding: 0;
}

body {
    background: lightgrey;
    color: black;
    font-family: Georgia, 'Times New Roman', Times, serif;
}

.contenedor {
    /* para que el contenedor no quede totalmente pegado 
    a los bordes de la ventada */
    width: 90%;
    max-width: 1000px;
    /* Para centrar la página */
    margin: 20px auto;
    display: grid;
    /* Este es el espacio que van a tener todos los objetos
    entre sí, de manera que no tengo que estar moviendo 
    los márgenes de los elementos. El gap no se aplica a los 
    bordes externos del contenedor */
    gap: 20px;
    /* Se establece el número de columnas que va a llegar 
    el diseño. Es importante tener previamente la diagramación */
    grid-template-columns: repeat(3, 1fr);
    /* Establezco el número de filas y su tamaño. 
    Al principio no se nota el cambio, pero el grid separa 
    los espacio para luego llenarlos con los elementos  */
    grid-template-rows: repeat(4, auto);

    /*  -------------------------------------------
        MÉTODO #2: HACER LA MAQUETACIÓN POR ÁREAS
        -------------------------------------------
    */
    /* Después de establecer la cantidad de columans y filas
    con grid-template-(columns/rows), realizo la distribución 
    de los espacios de la siguiente manera: */
    grid-template-areas: "header header header"
                         "contenido contenido sidebar"
                         "widget-1 widget-2 sidebar"
                         "footer footer footer"
}

/* En este caso, los div corresponden a los dos widgets */
.contenedor > div, 
.contenedor .header, 
.contenedor .contenido,
.contenedor .sidebar,
.contenedor .footer {
    background: #fff;
    padding: 20px;
    border-radius: 4px;
}
/* 
--------------------------------------------
        ESTABLECER TAMAÑOS DE SECCIONES
--------------------------------------------
*/
.contenedor .header {
    background: #12203e;
    color: #fff;
    /* Las líneas guía de la maquetación (ver inspector) 
    están numeradas, entonces yo puedo decirle desde cuál 
    línea hasta cual quiero que abarque mi elemento header,
    footer, etc.  */
    /* grid-column-start: 1;
    grid-column-end: 4; */
    /* Otra manera de abarcar todo el ancho del contenedor 
    principal, es poner grid-column-end: -1; */

    /*  -------------------------------------------
        MÉTODO #2: HACER LA MAQUETACIÓN POR ÁREAS
        -------------------------------------------
    */
    grid-area: header;

}

.contenedor .contenido {
    /* El argumento SPAN indica cuantas columnas
    del grid se va a tomar el elemento, en este caso, 
    la sección de contenido va a abarcar 2 de las 3 columnas
    disponibles  */
    /* grid-column: span 2;     */

    /*  -------------------------------------------
        MÉTODO #2: HACER LA MAQUETACIÓN POR ÁREAS
        -------------------------------------------
    */
    grid-area: contenido;
}

.contenedor .sidebar {
    /* Para organizar los elementos al interior de 
    un contenedor, lo ideal es usar FLEX, sin embargo
    la ubicación del contenedor en la estructura, es 
    manejada por GRID */
    grid-column:  3 / 4;
    /* grid-row: span 2; */
    /* Aquí también podría haberle dicho
    grid-row: 2 / 4; para que abarcara dos filas
    de la estructura, pero corre el riesgo de que 
    los elementos cambien de orden en la vista móvil*/
    
    display: flex;
    
    background: #faa43d;
    /* Para que el texto quede centrado en sentido 
    vertical y horizontal */
    text-align: center;
    justify-content: center;
    align-items: center;

    /* Es importante darle un tamaño mínimo al sidebar
    para el momento en que la web sea abierta en un 
    móvil, porque va a pasar de un formao vertical a uno
    horizontal */
    min-height: 200px;
    
    /*  -------------------------------------------
        MÉTODO #2: HACER LA MAQUETACIÓN POR ÁREAS
        -------------------------------------------
    */
    grid-area: sidebar;

}

.contenedor .widget-1,
.contenedor .widget-2 {
    display: flex;
    background: #55a8fd;
    color: #fff;
    height: 100px;
    text-align: center;
    align-items: center;
    justify-content: center;
}

.contenedor .widget-1 {
    /*  -------------------------------------------
        MÉTODO #2: HACER LA MAQUETACIÓN POR ÁREAS
        -------------------------------------------
    */
    grid-area: widget-1;
}

.contenedor .widget-2 {
    /*  -------------------------------------------
        MÉTODO #2: HACER LA MAQUETACIÓN POR ÁREAS
        -------------------------------------------
    */
    grid-area: widget-2;
}



.contenedor .footer {
    background: #12203e;
    color: #fff;
    /* grid-column: span 3; */

    /*  -------------------------------------------
        MÉTODO #2: HACER LA MAQUETACIÓN POR ÁREAS
        -------------------------------------------
    */
    grid-area: footer;

}

@media screen and (max-width: 768px) {
    /* Puedo usar estas líneas para 
    testear inicialmente si el navegador
    está cargando el media */
    /* body {
        background: #000;  
    } */

    /* Ahora quiero que el contenido de la 
    caja del texto principal abarque la totalidad
    de la pantalla cuando la web sea abierta en 
    un móvil */
    /* .contenedor .contenido {
        grid-column: 1 / -1;
    }
    .contenedor .sidebar {
        grid-column: 1 / -1;
    }

    .contenedor .widget-1 {
        grid-column: span 2;
    } */

    /*  -------------------------------------------
        MÉTODO #2: HACER LA MAQUETACIÓN POR ÁREAS
        -------------------------------------------
    */
    /* Copio el grid-template-areas de arriba y adapto
    la distribución que desee para la pantalla del móvil  */
    .contenedor {
        grid-template-areas: "header header header"
                             "contenido contenido contenido"
                             "sidebar sidebar sidebar"
                             "widget-1 widget-2 widget-2"
                             "footer footer footer";
    }
}
